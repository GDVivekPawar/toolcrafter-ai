
export const exportToText = (tool: any) => {
  const content = `
ACCESSIBILITY TOOL SPECIFICATION
================================

Tool Name: ${tool.toolName}

Key Features:
${tool.features.map((feature: string, index: number) => `${index + 1}. ${feature}`).join('\n')}

Implementation Steps:
${tool.implementation.map((step: string, index: number) => `${index + 1}. ${step}`).join('\n')}

Suggested UI Components:
${tool.uiComponents.map((component: string, index: number) => `â€¢ ${component}`).join('\n')}

Generated by AccessiGen - AI-Powered Accessibility Tools
Built for accessibility hackathon
`;

  const blob = new Blob([content], { type: 'text/plain' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `${tool.toolName.replace(/\s+/g, '_')}_specification.txt`;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
};

export const exportToPDF = (tool: any) => {
  // For now, we'll create a formatted HTML version that can be printed as PDF
  const content = `
    <!DOCTYPE html>
    <html>
    <head>
      <title>${tool.toolName} - Accessibility Tool Specification</title>
      <style>
        body { 
          font-family: Arial, sans-serif; 
          max-width: 800px; 
          margin: 40px auto; 
          padding: 20px; 
          line-height: 1.6;
        }
        h1 { color: #2563eb; border-bottom: 2px solid #2563eb; }
        h2 { color: #059669; margin-top: 30px; }
        ul, ol { margin: 15px 0; }
        li { margin: 8px 0; }
        .header { text-align: center; margin-bottom: 40px; }
        .footer { text-align: center; margin-top: 40px; font-style: italic; color: #666; }
      </style>
    </head>
    <body>
      <div class="header">
        <h1>ACCESSIBILITY TOOL SPECIFICATION</h1>
        <p><strong>${tool.toolName}</strong></p>
      </div>
      
      <h2>Key Features</h2>
      <ol>
        ${tool.features.map((feature: string) => `<li>${feature}</li>`).join('')}
      </ol>
      
      <h2>Implementation Steps</h2>
      <ol>
        ${tool.implementation.map((step: string) => `<li>${step}</li>`).join('')}
      </ol>
      
      <h2>Suggested UI Components</h2>
      <ul>
        ${tool.uiComponents.map((component: string) => `<li>${component}</li>`).join('')}
      </ul>
      
      <div class="footer">
        <p>Generated by AccessiGen - AI-Powered Accessibility Tools</p>
        <p>Built for accessibility hackathon</p>
      </div>
    </body>
    </html>
  `;

  const blob = new Blob([content], { type: 'text/html' });
  const url = URL.createObjectURL(blob);
  const newWindow = window.open(url, '_blank');
  if (newWindow) {
    newWindow.onload = () => {
      setTimeout(() => {
        newWindow.print();
      }, 500);
    };
  }
  setTimeout(() => URL.revokeObjectURL(url), 1000);
};
